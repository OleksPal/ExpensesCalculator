@using ExpensesCalculator.ViewModels
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@model AddItemViewModel<int>

<link href="~/css/single-line-text.css" rel="stylesheet" />

<script src="~/js/ajax/items/add-item.js"></script>
<script src="~/js/multiselect-dropdown.js"></script>

<div class="modal-header">
    <h5 class="modal-title">@Localizer["AddItem"]</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>
<div class="modal-body">
    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group mb-3">        
            <i class="bi bi-box"></i>
            <label class="control-label">@Localizer["Name"]</label>
            <input asp-for="Name" class="form-control" id="name"/>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group mb-3">
            <i class="bi bi-alphabet"></i>
            <labelclass ="control-label">
                @Localizer["Description"]</label>
            <input asp-for="Description" class="form-control" id="description"/>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-group mb-3">
            <i class="bi bi-coin"></i>
            <label class="control-label">@Localizer["Price"]</label>
            <input asp-for="Price" type="number" class="form-control" id="price"/>
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
        <div class="form-group mb-3">
            <i class="bi bi-grid"></i>
            <label class="control-label">@Localizer["Amount"]</label>
            <input asp-for="Amount" type="number" class="form-control" value="1" id="amount"/>
            <span asp-validation-for="Amount" class="text-danger"></span>
        </div>
        <div class="form-group mb-3 dropdown">
            <i class="bi bi-people-fill"></i>
            <label class="control-label">@Localizer["UserList"]</label>
            <button class="btn btn-outline-dark dropdown-toggle w-100 text single-line" type="button" style="text-align: left;"
                    id="multiSelectDropdown" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                @Localizer["SelectUsers"]
            </button>
            <ul class="dropdown-menu w-100 text single-line" aria-labelledby="multiSelectDropdown">
                @foreach (var participant in (ViewData["Participants"] as MultiSelectList))
                {
                    <li class="dropdown-item w-100">
                        <label class="form-check-label">
                            @if (participant.Selected)
                            {
                                <input type="checkbox" class="form-check-input"
                                       value=@participant.Value checked>
                            }
                            else
                            {
                                <input type="checkbox" class="form-check-input"
                                       value=@participant.Value>
                            }
                            @participant.Text
                        </label>
                    </li>
                }
            </ul>
            <span asp-validation-for="UserList" class="text-danger"></span>
        </div>
        <button type="button" value="Create" class="btn btn-success" id="createButton">
            <i class="bi bi-plus-circle"></i> @Localizer["AddItemButton"]
        </button>
    </form>
</div>

@if(Model is null)
{
    <script>
        var token = '@Html.AntiForgeryToken()'
        var checkId = @ViewData["CheckId"]
        var dayExpensesId = @ViewData["DayExpensesId"]
        var mySelectedItems = []
    </script>
}
else
{
    <script>
        var token = '@Html.AntiForgeryToken()'
        var checkId = @ViewData["CheckId"]
        var dayExpensesId = @ViewData["DayExpensesId"]
        var mySelectedItems = @(Model.UserList == null ? Html.Raw("[]") : Html.Raw(JsonConvert.SerializeObject(Model.UserList)))

        $(document).ready(function () {
            const dropdownButton = document.getElementById('multiSelectDropdown')
            dropdownButton.innerText = "@ViewData["FormatUserList"]"
        });
    </script>
}

